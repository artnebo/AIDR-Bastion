"use strict";(self.webpackChunkaidr_bastion_docs=self.webpackChunkaidr_bastion_docs||[]).push([[873],{7784:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=i(4848),t=i(8453);const s={},r="Configuration",l={id:"configuration",title:"Configuration",description:"Environment Variables (.env)",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/AIDR-Bastion/docs/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/0xAIDR/AIDR-Bastion/tree/main/docs/docs/configuration.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/AIDR-Bastion/docs/installation"},next:{title:"Usage",permalink:"/AIDR-Bastion/docs/usage"}},a={},c=[{value:"Environment Variables (.env)",id:"environment-variables-env",level:2},{value:"Pipeline Configuration (config.json)",id:"pipeline-configuration-configjson",level:2},{value:"Configuration Impact",id:"configuration-impact",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(e.h2,{id:"environment-variables-env",children:"Environment Variables (.env)"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-env",children:"# FastAPI configuration\nHOST=0.0.0.0\nPORT=8000\n\n\n# ML Pipeline. \n# Path to the model\nML_MODEL_PATH=\n\n# LLM Pipeline\n# model by default gpt-4\nOPENAI_API_KEY=\nOPENAI_MODEL=\nOPENAI_BASE_URL=\n\n# Similarity Pipeline\n# similarity-prompt-index by default\nSIMILARITY_PROMPT_INDEX=\n\nSIMILARITY_NOTIFY_THRESHOLD=0.7\nSIMILARITY_BLOCK_THRESHOLD=0.87\n\n# OpenSearch configuration\nOS__HOST=\nOS__PORT=\nOS__SCHEME=\nOS__USER=\nOS__PASSWORD=\n\n# Kafka configuration (for event logging)\nKAFKA__BOOTSTRAP_SERVERS=localhost:9092\nKAFKA__TOPIC=aidr-events\nKAFKA__SECURITY_PROTOCOL=PLAINTEXT\nKAFKA__SASL_MECHANISM=\nKAFKA__SASL_USERNAME=\nKAFKA__SASL_PASSWORD=\n\n# requires for creating embedding in pipelines: Similarity Pipeline and ML Pipeline\nEMBEDDINGS_MODEL=\n\n## Kafka configuration\n# KAFKA__BOOTSTRAP_SERVERS=\n# KAFKA__TOPIC=\n# KAFKA__SECURITY_PROTOCOL=PLAINTEXT\n# KAFKA__SASL_MECHANISM=\n# KAFKA__SASL_USERNAME=\n# KAFKA__SASL_PASSWORD=\n# KAFKA__SAVE_PROMPT=true \n"})}),"\n",(0,o.jsx)(e.h2,{id:"pipeline-configuration-configjson",children:"Pipeline Configuration (config.json)"}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"config.json"})," file controls which Pipelines are active for each flow.\nDefault ",(0,o.jsx)(e.code,{children:"config.json"})," configuraton:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'[\n    {\n        "pipeline_flow": "full_scan",\n        "pipelines": [\n            "similarity",\n            "regex",\n            "openai",\n            "ml",\n            "code_analysis"\n        ]\n    },\n    {\n        "pipeline_flow": "code_audit",\n        "pipelines": [\n            "code_analysis"\n        ]\n    },\n    {\n        "pipeline_flow": "model_audit",\n        "pipelines": [\n            "ml",\n            "openai"\n        ]\n    },\n    {\n        "pipeline_flow": "base_audit",\n        "pipelines": [\n            "regex",\n            "similarity"\n        ]\n    }\n]\n'})}),"\n",(0,o.jsx)(e.h3,{id:"configuration-impact",children:"Configuration Impact"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Flow names"}),": Can be any custom name (e.g., ",(0,o.jsx)(e.code,{children:"base"}),", ",(0,o.jsx)(e.code,{children:"code"}),", ",(0,o.jsx)(e.code,{children:"security"}),", ",(0,o.jsx)(e.code,{children:"content"}),"). The name must match what you pass in the API request's ",(0,o.jsx)(e.code,{children:"pipeline_flow"})," parameter"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Pipeline names"}),": Must match the Pipeline names defined in ",(0,o.jsx)(e.code,{children:"PipelineNames"})," enum"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Order matters"}),": Pipelines run in the order specified in the array"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Example flows"}),":","\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"base"})," flow: Pipelines general text prompts for harmful content"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"code"})," flow: Pipelines code snippets for security vulnerabilities"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"custom_flow"}),": You can create any custom flow name for specific use cases"]}),"\n"]}),"\n"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>l});var o=i(6540);const t={},s=o.createContext(t);function r(n){const e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);