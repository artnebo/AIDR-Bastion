"use strict";(self.webpackChunkaidr_bastion_docs=self.webpackChunkaidr_bastion_docs||[]).push([[514],{3760:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=i(4848),s=i(8453);const t={},l="Rule Management and Customization",o={id:"rule-management",title:"Rule Management and Customization",description:"YAML Rules for Regex Pipeline",source:"@site/docs/rule-management.md",sourceDirName:".",slug:"/rule-management",permalink:"/AIDR-Bastion/docs/rule-management",draft:!1,unlisted:!1,editUrl:"https://github.com/0xAIDR/AIDR-Bastion/tree/main/docs/docs/rule-management.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pipelines",permalink:"/AIDR-Bastion/docs/pipelines"},next:{title:"Adding Custom Pipelines",permalink:"/AIDR-Bastion/docs/adding-custom-pipelines"}},a={},c=[{value:"YAML Rules for Regex Pipeline",id:"yaml-rules-for-regex-pipeline",level:2},{value:"Semgrep Rules for Code Analysis Pipeline",id:"semgrep-rules-for-code-analysis-pipeline",level:2},{value:"Managing Rules",id:"managing-rules",level:2},{value:"Using Roota for Rule Creation",id:"using-roota-for-rule-creation",level:3},{value:"Using Uncoder AI for Semgrep Rules",id:"using-uncoder-ai-for-semgrep-rules",level:3},{value:"Using SOC Prime for Advanced Rules",id:"using-soc-prime-for-advanced-rules",level:3},{value:"Custom Rule Development",id:"custom-rule-development",level:2},{value:"Creating Custom Regex Rules",id:"creating-custom-regex-rules",level:3},{value:"Creating Custom Semgrep Rules",id:"creating-custom-semgrep-rules",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"rule-management-and-customization",children:"Rule Management and Customization"}),"\n",(0,r.jsx)(n.h2,{id:"yaml-rules-for-regex-pipeline",children:"YAML Rules for Regex Pipeline"}),"\n",(0,r.jsxs)(n.p,{children:["The Regex Pipeline defines detection patterns using ",(0,r.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})," rules files. Roota is a public-domain language for collective cyber defense that combines native queries from SIEM, EDR, XDR, or Data Lake with standardized metadata and threat intelligence to enable automated translation into other languages."]}),"\n",(0,r.jsx)(n.p,{children:"Each rule file follows a specific structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'name: "Rule Name"\ndescription: "Description of what this rule detects"\nseverity: "high|medium|low"\ncategory: "injection|obfuscation|override|leakage|pii|semantic|dos"\npatterns:\n  language: llm-regex-pattern\n  pattern: \n   - "pattern"\n   - "another_pattern"\naction: "block|notify|allow"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Rule Categories:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Injection"}),": SQL injection, command execution, path traversal, script injection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Obfuscation"}),": Character obfuscation, encoding tricks, Unicode homoglyphs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Override"}),": Role play attacks, filter disabling, context splicing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Leakage"}),": Direct prompt requests, forced repetition attacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PII"}),": Personal identifiable information detection (emails, phones, credit cards, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semantic"}),": Emotional manipulation, authority fallacy, multilingual attacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DoS"}),": Denial of service patterns (character repetition, regex DoS)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"semgrep-rules-for-code-analysis-pipeline",children:"Semgrep Rules for Code Analysis Pipeline"}),"\n",(0,r.jsxs)(n.p,{children:["The code pipeline uses Semgrep rules for static code analysis. Rules are located in ",(0,r.jsx)(n.code,{children:"app/pipelines/semgrep_pipeline/rules/"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Rule Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'rules:\n  - id: rule-id\n    message: "Security issue description"\n    languages: [python, javascript, java]\n    severity: ERROR\n    patterns:\n      - pattern: |\n          $PATTERN\n    fix: |\n      $FIX\n'})}),"\n",(0,r.jsx)(n.h2,{id:"managing-rules",children:"Managing Rules"}),"\n",(0,r.jsx)(n.h3,{id:"using-roota-for-rule-creation",children:"Using Roota for Rule Creation"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})," is a public-domain language for collective cyber defense that provides:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"YAML-based format"})," that's easy to write and human-readable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-language support"})," for SIEM, EDR, XDR, and Data Lake queries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MITRE ATT&CK mapping"})," for threat intelligence integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Threat actor timeline"})," support for coordinated defense"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Correlation support"})," for more robust detection logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"OCSF and Sigma compatibility"})," for maximum compatibility"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Roota Rule Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"name: 'INJ-001: SQL Keywords'\ndetails: Detects common SQL manipulation keywords. Designed to be a high-confidence signal. https://tdm.socprime.com/\nauthor: SOC Prime Team\nseverity: critical\ndate: 2025-08-08\nlogsource:\n  product: llm\n  service: firewall\n  module: regex\ndetection:\n  language: llm-regex-pattern\n  pattern:\n    - '(?i)\\b(?:SELECT\\s+(?:(?!\\bFROM\\b)[^,;]+,)+(?:(?!\\bFROM\\b)[^,;]+)\\s+FROM|INSERT\\s+INTO|UPDATE\\s+[\\w\\.]+\\s+SET|DELETE\\s+FROM|DROP\\s+(?:TABLE|DATABASE)|ALTER\\s+TABLE|CREATE\\s+TABLE|TRUNCATE\\s+TABLE)\\b'\nreferences:\n  - https://genai.owasp.org/llmrisk/llm01-prompt-injection/\n  - https://owasp.org/Top10/A03_2021-Injection/\nlicense: DRL 1.1\nuuid: f1a2b3c4-d5e6-4f7a-8b8c-9d0e1f2a3b4c\nresponse: block\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-uncoder-ai-for-semgrep-rules",children:"Using Uncoder AI for Semgrep Rules"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})," is a powerful tool for converting Sigma and Roota rules to various formats including Semgrep:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Register account for free"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Select Roota/Sigma to Semgrep conversion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Paste your Roota or Sigma rule"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Generate Semgrep YAML rule"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Save the generated rule"})," in ",(0,r.jsx)(n.code,{children:"app/pipelines/semgrep_pipeline/rules/"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Sigma Rule:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"title: Suspicious PowerShell Command\ndescription: Detects suspicious PowerShell commands\nlogsource:\n  category: process_creation\n  product: windows\ndetection:\n  selection:\n    - CommandLine: '*powershell*'\n    - CommandLine: '*Invoke-Expression*'\n  condition: selection\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-soc-prime-for-advanced-rules",children:"Using SOC Prime for Advanced Rules"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://tdm.socprime.com/",children:"SOC Prime"})," provides comprehensive threat detection rules including Roota and Sigma formats:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://tdm.socprime.com/",children:"SOC Prime"})]})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Browse the Rules Library"})," (Sigma, Roota, and other formats)"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Filter by technology and threat type"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.strong,{children:["Download or convert rules using ",(0,r.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Adapt rules for your specific use case"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"custom-rule-development",children:"Custom Rule Development"}),"\n",(0,r.jsx)(n.h3,{id:"creating-custom-regex-rules",children:"Creating Custom Regex Rules"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Identify the attack pattern"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create YAML file"})," in appropriate category folder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Define patterns"})," with clear descriptions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test thoroughly"})," with various inputs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Set appropriate severity"})," and action"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Custom Rule:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'name: Custom Injection Pattern\ndetails: Detects custom injection attempts\nauthor: your name\nseverity: high\ndate: 2025-08-08\nlogsource:\n    product: llm\n    category: injection\n    module: regex\npatterns:\n    language: llm-regex-pattern\n    pattern: \n        - "(?i)(union|select|insert|delete|update|drop).*from"\n        - "(?i)(exec|system|eval|shell_exec)"\nreferences:\n    - https://one_example\n    - https://two_example\nlicense: DRL 1.1\nuuid: f1a2b3c4-d5e6-4f7a-8b8c-9d0e1f2a3b4c\naction: block\n'})}),"\n",(0,r.jsx)(n.h3,{id:"creating-custom-semgrep-rules",children:"Creating Custom Semgrep Rules"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Identify code vulnerability pattern"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Write Semgrep pattern"})," using their syntax"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Test with sample code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add appropriate metadata"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Place in rules directory"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Custom Semgrep Rule:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'rules:\n  - id: custom-sql-injection\n    message: "Potential SQL injection vulnerability"\n    languages: [python]\n    severity: ERROR\n    patterns:\n      - pattern: |\n          $QUERY = "SELECT * FROM $TABLE WHERE id = " + $USER_INPUT\n    fix: |\n      $QUERY = "SELECT * FROM $TABLE WHERE id = %s"\n      # Use parameterized queries\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);