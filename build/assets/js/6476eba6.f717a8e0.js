"use strict";(self.webpackChunkaidr_bastion_docs=self.webpackChunkaidr_bastion_docs||[]).push([[722],{7493:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=s(4848),i=s(8453);const r={},o="Usage",l={id:"usage",title:"Usage",description:"Basic API Usage",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/AIDR-Bastion/docs/usage",draft:!1,unlisted:!1,editUrl:"https://github.com/0xAIDR/AIDR-Bastion/tree/main/docs/docs/usage.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/AIDR-Bastion/docs/configuration"},next:{title:"API Reference",permalink:"/AIDR-Bastion/docs/api-reference"}},a={},c=[{value:"Basic API Usage",id:"basic-api-usage",level:2},{value:"Python SDK Usage",id:"python-sdk-usage",level:2},{value:"Integration with Existing Applications",id:"integration-with-existing-applications",level:2},{value:"Project Configuration",id:"project-configuration",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h2,{id:"basic-api-usage",children:"Basic API Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Run pipeline analysis on a text prompt\nresponse = requests.post("http://localhost:8000/api/v1/run_pipeline", json={\n    "prompt": "Your text to analyze here",\n    "pipeline_flow": "base"  # Must match a flow_name from config.json\n})\n\nresult = response.json()\nprint(f"Status: {result[\'status\']}")  # allow, block, or notify\nprint(f"Triggered rules: {result[\'result\']}")\n\n# Get available flows and pipelines\nflows_response = requests.get("http://localhost:8000/api/v1/flows")\nflows = flows_response.json()\nprint(f"Available flows: {[flow[\'flow_name\'] for flow in flows[\'flows\']]}")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"python-sdk-usage",children:"Python SDK Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from app.manager import pipeline_manager\n\n# Direct usage\nresult = await pipeline_manager.run_pipeline("Your prompt", "default")\nprint(f"Status: {result.status}")\nfor pipeline in result.pipelines:\n    print(f"Pipeline: {pipeline.name}, Status: {pipeline.status}")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-existing-applications",children:"Integration with Existing Applications"}),"\n",(0,t.jsx)(n.p,{children:"You can integrate project for your existing LLM application:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Send requests:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import requests\n\ndef check_prompt_safety(prompt: str):\n    response = requests.post(\n        "http://localhost:8000/api/v1/run_pipeline",\n        json={\n            "prompt": prompt,\n            "pipeline_flow": "security_audit"\n        }\n    )\n    result = response.json()\n    \n    if result["status"] == "BLOCK":\n        return False, "Prompt blocked"\n    elif result["status"] == "NOTIFY":\n        return True, "Prompt flagged but allowed"\n    else:\n        return True, "Prompt safe"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Configure your application to check all user inputs"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Set up proper error handling and fallbacks"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"project-configuration",children:"Project Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The project can be configured through environment variables:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"HOST"}),": Server host (default: 0.0.0.0)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PORT"}),": Server port (default: 8000)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CORS_ORIGINS"}),": Allowed origins for CORS"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"EMBEDDINGS_MODEL"}),": Hugging Face model for embeddings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SIMILARITY_NOTIFY_THRESHOLD"}),": Threshold for notifications"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SIMILARITY_BLOCK_THRESHOLD"}),": Threshold for blocking"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"All required environments you can find in env.example"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);