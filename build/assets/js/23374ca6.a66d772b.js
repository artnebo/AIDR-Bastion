"use strict";(self.webpackChunkaidr_bastion_docs=self.webpackChunkaidr_bastion_docs||[]).push([[278],{4842:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=i(4848),l=i(8453);const r={},t="AIDR Bastion",a={id:"README",title:"AIDR Bastion",description:"Version",source:"@site/docs/README.md",sourceDirName:".",slug:"/",permalink:"/AIDR-Bastion/docs/",draft:!1,unlisted:!1,editUrl:"https://github.com/0xAIDR/AIDR-Bastion/tree/main/docs/docs/README.md",tags:[],version:"current",frontMatter:{}},o={},c=[{value:"\ud83d\ude80 Features",id:"-features",level:2},{value:"\ud83c\udfd7\ufe0f Architecture",id:"\ufe0f-architecture",level:2},{value:"\ud83d\udccb Table of Contents",id:"-table-of-contents",level:2},{value:"\ud83d\udee0\ufe0f Installation",id:"\ufe0f-installation",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Quick Start",id:"quick-start",level:3},{value:"\u2699\ufe0f Configuration",id:"\ufe0f-configuration",level:2},{value:"Environment Variables (.env)",id:"environment-variables-env",level:3},{value:"Pipeline Configuration (config.json)",id:"pipeline-configuration-configjson",level:3},{value:"Configuration Impact",id:"configuration-impact",level:4},{value:"\ud83d\ude80 Usage",id:"-usage",level:2},{value:"Basic API Usage",id:"basic-api-usage",level:3},{value:"Python SDK Usage",id:"python-sdk-usage",level:3},{value:"Integration with Existing Applications",id:"integration-with-existing-applications",level:3},{value:"Project Configuration",id:"project-configuration",level:3},{value:"\ud83d\udcda API Reference",id:"-api-reference",level:2},{value:"POST /api/v1/run_pipeline",id:"post-apiv1run_pipeline",level:3},{value:"GET /api/v1/flows",id:"get-apiv1flows",level:3},{value:"\ud83d\udd0d Pipelines",id:"-pipelines",level:2},{value:"1. Regex Pipeline (<code>regex</code>)",id:"1-regex-pipeline-regex",level:3},{value:"2. Similarity Pipeline (<code>similarity</code>)",id:"2-similarity-pipeline-similarity",level:3},{value:"3. Code Analysis Pipeline (<code>code_analysis</code>)",id:"3-code-analysis-pipeline-code_analysis",level:3},{value:"4. ML Pipeline (<code>ml</code>)",id:"4-ml-pipeline-ml",level:3},{value:"5. LLM Pipeline (<code>openai</code>)",id:"5-llm-pipeline-openai",level:3},{value:"\ud83d\udccb Rule Management and Customization",id:"-rule-management-and-customization",level:2},{value:"YAML Rules for Regex Pipeline",id:"yaml-rules-for-regex-pipeline",level:3},{value:"Semgrep Rules for Code Analysis Pipeline",id:"semgrep-rules-for-code-analysis-pipeline",level:3},{value:"Managing Rules",id:"managing-rules",level:3},{value:"Using Roota for Rule Creation",id:"using-roota-for-rule-creation",level:4},{value:"Using Uncoder AI for Semgrep Rules",id:"using-uncoder-ai-for-semgrep-rules",level:4},{value:"Using SOC Prime for Advanced Rules",id:"using-soc-prime-for-advanced-rules",level:4},{value:"Custom Rule Development",id:"custom-rule-development",level:3},{value:"Creating Custom Regex Rules",id:"creating-custom-regex-rules",level:4},{value:"Creating Custom Semgrep Rules",id:"creating-custom-semgrep-rules",level:4},{value:"\u2699\ufe0f Enabling Disabled Pipeline",id:"\ufe0f-enabling-disabled-pipeline",level:2},{value:"Enable OpenAI Pipeline",id:"enable-openai-pipeline",level:3},{value:"Enable ML Pipeline",id:"enable-ml-pipeline",level:3},{value:"\ud83d\udd27 Adding Custom Pipelines",id:"-adding-custom-pipelines",level:2},{value:"Step 1: Create Pipeline Class",id:"step-1-create-pipeline-class",level:3},{value:"Step 2: Register Pipeline",id:"step-2-register-pipeline",level:3},{value:"Step 3: Add to Configuration",id:"step-3-add-to-configuration",level:3},{value:"Step 4: Add Pipeline Name to Enum",id:"step-4-add-pipeline-name-to-enum",level:3},{value:"\ud83e\uddea Development",id:"-development",level:2},{value:"Setting up OpenSearch",id:"setting-up-opensearch",level:3},{value:"Setting up Kafka for Event Logging",id:"setting-up-kafka-for-event-logging",level:3},{value:"Quick Start with Docker Compose",id:"quick-start-with-docker-compose",level:4},{value:"Event Logging Features",id:"event-logging-features",level:4},{value:"Event Schema",id:"event-schema",level:4},{value:"Advanced Kafka Configuration",id:"advanced-kafka-configuration",level:4},{value:"Rule Management",id:"rule-management",level:4},{value:"\ud83d\udcc4 License",id:"-license",level:2},{value:"\ud83d\udee0\ufe0f Built With",id:"\ufe0f-built-with",level:2},{value:"\ud83d\udee0\ufe0f TO-DO List",id:"\ufe0f-to-do-list",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"aidr-bastion",children:"AIDR Bastion"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/artnebo/AIDR-Bastion/blob/main/VERSION",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/version-1.0.0-blue.svg",alt:"Version"})}),"\n",(0,s.jsx)(n.a,{href:"https://www.python.org/downloads/release/python-3120/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/python-3.12-blue.svg",alt:"Python 3.12"})}),"\n",(0,s.jsx)(n.a,{href:"https://fastapi.tiangolo.com/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/FastAPI-0.109.2-green.svg",alt:"FastAPI"})}),"\n",(0,s.jsx)(n.a,{href:"LICENSE",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/license-LGPL%20v3-blue.svg",alt:"License"})})]}),"\n",(0,s.jsx)(n.p,{children:"A comprehensive GenAI protection system designed to safeguard against malicious prompts, injection attacks, and harmful content. The system incorporates multiple detection engines that operate sequentially to analyze and classify user inputs before reaching GenAI applications."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The system supports ",(0,s.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})," and ",(0,s.jsx)(n.a,{href:"https://sigmahq.io/docs/guide/about.html",children:"Sigma rules"}),", enabling the application of detection logic from multiple sources such as ",(0,s.jsx)(n.a,{href:"https://github.com/SigmaHQ/sigma",children:"SigmaHQ"})," (around 1,200 compatible free community Sigma rules available at release), ",(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/",children:"SOC Prime"})," (with up to 3,000 additional compatible rules), and other third-party repositories. Sigma rules can be applied to detect use cases where malware leverages a local LLM to generate malicious code for execution."]}),"\n",(0,s.jsxs)(n.li,{children:["SOC Prime ",(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})," integration further extends functionality by translating Sigma rules into Semgrep format, providing standardized and reusable detection pipelines (requires a free account)."]}),"\n",(0,s.jsx)(n.li,{children:"Roota rules power the regex-based pipeline."}),"\n",(0,s.jsx)(n.li,{children:"The architecture supports rule extensibility, seamlessly integrating organization-specific signatures and external detection content."}),"\n",(0,s.jsx)(n.li,{children:"The system can also function as a local logging sensor, recording user and agent prompts and enabling diagnostics, incident discovery, and cyber attack investigation."}),"\n",(0,s.jsxs)(n.li,{children:["Detection logic aligns with industry frameworks such as ",(0,s.jsx)(n.a,{href:"https://atlas.mitre.org/",children:"MITRE ATLAS"})," and ",(0,s.jsx)(n.a,{href:"https://owasp.org/www-project-top-10-for-large-language-model-applications/",children:"OWASP Top 10 for LLMs"}),", ensuring standardized coverage against adversarial techniques."]}),"\n",(0,s.jsx)(n.li,{children:"Actions include allow, block, or notify, depending on rule matches and policy configuration."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This layered detection approach delivers defense-in-depth against evolving adversarial prompt engineering and other AI-focused attack vectors.\nInspired by LlamaFirewall."}),"\n",(0,s.jsx)(n.h2,{id:"-features",children:"\ud83d\ude80 Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-Pipeline Detection"}),": Regex patterns, ML models, vector-based similarity detection, and LLM-based analysis"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flexible Configuration"}),": Dynamic Pipeline configuration via JSON"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Analysis"}),": Fast async processing with configurable thresholds"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"OpenSearch Integration"}),": Vector-based similarity search for prompt classification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"RESTful API"}),": Easy integration with existing applications"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensible Architecture"}),": Simple plugin system for custom Pipelines"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-architecture",children:"\ud83c\udfd7\ufe0f Architecture"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   FastAPI Endpoint             \u2502\n\u2502   (POST /api/v1/run_pipeline)  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n               \u2502\n               \u25bc\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      \u2502  Pipeline Manager   \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                \u2502\n                \u25bc\n      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      \u2502          Pipelines           \u2502\n      \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n      \u2502 \u2502  Regex Pipeline          \u2502 \u2502\n      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502\n      \u2502 \u2502  Similarity Pipeline     \u2502 \u2502\n      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502\n      \u2502 \u2502  Code Analysis Pipeline  \u2502 \u2502\n      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502\n      \u2502 \u2502  ML Pipeline             \u2502 \u2502\n      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502\n      \u2502 \u2502  LLM (OpenAI) Pipeline   \u2502 \u2502\n      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-table-of-contents",children:"\ud83d\udccb Table of Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#%EF%B8%8F-installation",children:"Installation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#%EF%B8%8F-configuration",children:"Configuration"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-usage",children:"Usage"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-pipelines",children:"Pipelines"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-rule-management-and-customization",children:"Rule Management and Customization"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-adding-custom-pipelines",children:"Adding Custom Pipelines"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-development",children:"Development"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#-license",children:"License"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#%EF%B8%8F-built-with",children:"Built With"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#%EF%B8%8F-to-do-list",children:"TO-DO List"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-installation",children:"\ud83d\udee0\ufe0f Installation"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Python 3.12+"}),"\n",(0,s.jsx)(n.li,{children:"OpenSearch (for Similarity Pipeline)"}),"\n",(0,s.jsx)(n.li,{children:"OpenAI API key (for LLM Pipeline)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Clone the repository"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/0xAIDR/AIDR-Bastion.git\ncd AIDR-Bastion\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create virtual environment"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install dependencies"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install -r requirements.txt\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Set up environment variables"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cp env.example .env\n# Edit .env with your configuration\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Run the application"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python server.py\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["By default, the API will be available at ",(0,s.jsx)(n.code,{children:"http://localhost:8000"}),". You can customize the host and port using the HOST and PORT environment variables."]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-configuration",children:"\u2699\ufe0f Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables-env",children:"Environment Variables (.env)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"# FastAPI configuration\nHOST=0.0.0.0\nPORT=8000\n\n\n# ML Pipeline. \n# Path to the model\nML_MODEL_PATH=\n\n# LLM Pipeline\n# model by default gpt-4\nOPENAI_API_KEY=\nOPENAI_MODEL=\nOPENAI_BASE_URL=\n\n# Similarity Pipeline\n# similarity-prompt-index by default\nSIMILARITY_PROMPT_INDEX=\n\nSIMILARITY_NOTIFY_THRESHOLD=0.7\nSIMILARITY_BLOCK_THRESHOLD=0.87\n\n# OpenSearch configuration\nOS__HOST=\nOS__PORT=\nOS__SCHEME=\nOS__USER=\nOS__PASSWORD=\n\n# Kafka configuration (for event logging)\nKAFKA__BOOTSTRAP_SERVERS=localhost:9092\nKAFKA__TOPIC=aidr-events\nKAFKA__SECURITY_PROTOCOL=PLAINTEXT\nKAFKA__SASL_MECHANISM=\nKAFKA__SASL_USERNAME=\nKAFKA__SASL_PASSWORD=\n\n# requires for creating embedding in pipelines: Similarity Pipeline and ML Pipeline\nEMBEDDINGS_MODEL=\n\n## Kafka configuration\n# KAFKA__BOOTSTRAP_SERVERS=\n# KAFKA__TOPIC=\n# KAFKA__SECURITY_PROTOCOL=PLAINTEXT\n# KAFKA__SASL_MECHANISM=\n# KAFKA__SASL_USERNAME=\n# KAFKA__SASL_PASSWORD=\n# KAFKA__SAVE_PROMPT=true \n"})}),"\n",(0,s.jsx)(n.h3,{id:"pipeline-configuration-configjson",children:"Pipeline Configuration (config.json)"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"config.json"})," file controls which Pipelines are active for each flow.\nDefault ",(0,s.jsx)(n.code,{children:"config.json"})," configuraton:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "pipeline_flow": "full_scan",\n        "pipelines": [\n            "similarity",\n            "regex",\n            "openai",\n            "ml",\n            "code_analysis"\n        ]\n    },\n    {\n        "pipeline_flow": "code_audit",\n        "pipelines": [\n            "code_analysis"\n        ]\n    },\n    {\n        "pipeline_flow": "model_audit",\n        "pipelines": [\n            "ml",\n            "openai"\n        ]\n    },\n    {\n        "pipeline_flow": "base_audit",\n        "pipelines": [\n            "regex",\n            "similarity"\n        ]\n    }\n]\n'})}),"\n",(0,s.jsx)(n.h4,{id:"configuration-impact",children:"Configuration Impact"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flow names"}),": Can be any custom name (e.g., ",(0,s.jsx)(n.code,{children:"base"}),", ",(0,s.jsx)(n.code,{children:"code"}),", ",(0,s.jsx)(n.code,{children:"security"}),", ",(0,s.jsx)(n.code,{children:"content"}),"). The name must match what you pass in the API request's ",(0,s.jsx)(n.code,{children:"pipeline_flow"})," parameter"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pipeline names"}),": Must match the Pipeline names defined in ",(0,s.jsx)(n.code,{children:"PipelineNames"})," enum"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Order matters"}),": Pipelines run in the order specified in the array"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Example flows"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"base"})," flow: Pipelines general text prompts for harmful content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"code"})," flow: Pipelines code snippets for security vulnerabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"custom_flow"}),": You can create any custom flow name for specific use cases"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-usage",children:"\ud83d\ude80 Usage"}),"\n",(0,s.jsx)(n.h3,{id:"basic-api-usage",children:"Basic API Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\n# Run pipeline analysis on a text prompt\nresponse = requests.post("http://localhost:8000/api/v1/run_pipeline", json={\n    "prompt": "Your text to analyze here",\n    "pipeline_flow": "base"  # Must match a flow_name from config.json\n})\n\nresult = response.json()\nprint(f"Status: {result[\'status\']}")  # allow, block, or notify\nprint(f"Triggered rules: {result[\'result\']}")\n\n# Get available flows and pipelines\nflows_response = requests.get("http://localhost:8000/api/v1/flows")\nflows = flows_response.json()\nprint(f"Available flows: {[flow[\'flow_name\'] for flow in flows[\'flows\']]}")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-sdk-usage",children:"Python SDK Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from app.manager import pipeline_manager\n\n# Direct usage\nresult = await pipeline_manager.run_pipeline("Your prompt", "default")\nprint(f"Status: {result.status}")\nfor pipeline in result.pipelines:\n    print(f"Pipeline: {pipeline.name}, Status: {pipeline.status}")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-existing-applications",children:"Integration with Existing Applications"}),"\n",(0,s.jsx)(n.p,{children:"You can integrate project for your existing LLM application:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Send requests:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\ndef check_prompt_safety(prompt: str):\n    response = requests.post(\n        "http://localhost:8000/api/v1/run_pipeline",\n        json={\n            "prompt": prompt,\n            "pipeline_flow": "security_audit"\n        }\n    )\n    result = response.json()\n    \n    if result["status"] == "BLOCK":\n        return False, "Prompt blocked"\n    elif result["status"] == "NOTIFY":\n        return True, "Prompt flagged but allowed"\n    else:\n        return True, "Prompt safe"\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Configure your application to check all user inputs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Set up proper error handling and fallbacks"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"project-configuration",children:"Project Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The project can be configured through environment variables:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"HOST"}),": Server host (default: 0.0.0.0)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"PORT"}),": Server port (default: 8000)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CORS_ORIGINS"}),": Allowed origins for CORS"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"EMBEDDINGS_MODEL"}),": Hugging Face model for embeddings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SIMILARITY_NOTIFY_THRESHOLD"}),": Threshold for notifications"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SIMILARITY_BLOCK_THRESHOLD"}),": Threshold for blocking"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"All required environments you can find in env.example"}),"\n",(0,s.jsx)(n.h2,{id:"-api-reference",children:"\ud83d\udcda API Reference"}),"\n",(0,s.jsx)(n.h3,{id:"post-apiv1run_pipeline",children:"POST /api/v1/run_pipeline"}),"\n",(0,s.jsx)(n.p,{children:"Runs pipelines to analyze the input prompt."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "prompt": "string",\n    "pipeline_flow": "string"  // Must match a flow_name from config.json\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Response:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "status": "allow" | "block" | "notify",\n    "result": [\n        {\n            "status": "allow" | "block" | "notify",\n            "name": "string",\n            "triggered_rules": [\n                {\n                    "id": "string",\n                    "name": "string",\n                    "details": "string",\n                    "body": "string",\n                    "action": "notify" | "block",\n                    "severity": "string",\n                    "cwe_id": "string"\n                }\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get-apiv1flows",children:"GET /api/v1/flows"}),"\n",(0,s.jsx)(n.p,{children:"Get a list of all available flows and their pipelines."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Response:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "flows": [\n        {\n            "flow_name": "string",\n            "pipelines": [\n                {\n                    "name": "string",\n                    "enabled": "boolean"\n                }\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-pipelines",children:"\ud83d\udd0d Pipelines"}),"\n",(0,s.jsxs)(n.h3,{id:"1-regex-pipeline-regex",children:["1. Regex Pipeline (",(0,s.jsx)(n.code,{children:"regex"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Pattern-based detection using regular expressions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rules"}),": YAML files in ",(0,s.jsx)(n.code,{children:"app/pipelines/regex_pipeline/rules/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Categories"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Injection"}),": SQL, command execution, path traversal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obfuscation"}),": Character obfuscation, encoding, Unicode homoglyphs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Override"}),": Role play, filter disabling, context splicing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Leakage"}),": Direct prompt requests, forced repetition"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PII"}),": Email, phone, credit cards, passwords, API keys, UUIDs, IBAN"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Semantic"}),": Emotional manipulation, authority fallacy, multilingual attacks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DoS"}),": Character/word repetition, regex DoS"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Best for"}),": Known attack patterns and simple text analysis"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"2-similarity-pipeline-similarity",children:["2. Similarity Pipeline (",(0,s.jsx)(n.code,{children:"similarity"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Vector-based similarity detection against known harmful prompts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Backend"}),": OpenSearch with vector search"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required"}),": OpenSearch configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration"}),": ",(0,s.jsx)(n.code,{children:"SIMILARITY_NOTIFY_THRESHOLD"}),", ",(0,s.jsx)(n.code,{children:"SIMILARITY_BLOCK_THRESHOLD"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Best for"}),": Detecting variations of known attacks"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"3-code-analysis-pipeline-code_analysis",children:["3. Code Analysis Pipeline (",(0,s.jsx)(n.code,{children:"code_analysis"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Static code analysis using Semgrep"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Languages"}),": Python, JavaScript, Java, C++, and more"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rules"}),": Security-focused patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Best for"}),": Code injection and vulnerability detection"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"4-ml-pipeline-ml",children:["4. ML Pipeline (",(0,s.jsx)(n.code,{children:"ml"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Machine learning-based classification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration"}),": Requires ",(0,s.jsx)(n.code,{children:"ML_PIPELINE_PATH"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Model"}),": Custom-trained model for prompt classification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Best for"}),": General malicious content detection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required"}),": Configured environment ",(0,s.jsx)(n.code,{children:"EMBEDDINGS_MODEL"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"5-llm-pipeline-openai",children:["5. LLM Pipeline (",(0,s.jsx)(n.code,{children:"openai"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": AI-powered analysis using OpenAI GPT models"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration"}),": Requires ",(0,s.jsx)(n.code,{children:"OPENAI_API_KEY"})," and ",(0,s.jsx)(n.code,{children:"OPENAI_MODEL"})," (default is gpt-4). The ",(0,s.jsx)(n.code,{children:"OPENAI_BASE_URL"})," environment variable is optional; by default, it is set to ",(0,s.jsx)(n.a,{href:"https://api.openai.com/v1",children:"https://api.openai.com/v1"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Features"}),": JSON response format, configurable models, intelligent decision-making"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Response Format"}),": Returns structured JSON with status (block/notify/allow) and reasoning"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Best for"}),": Complex reasoning and context-aware analysis"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-rule-management-and-customization",children:"\ud83d\udccb Rule Management and Customization"}),"\n",(0,s.jsx)(n.h3,{id:"yaml-rules-for-regex-pipeline",children:"YAML Rules for Regex Pipeline"}),"\n",(0,s.jsxs)(n.p,{children:["The Regex Pipeline defines detection patterns using ",(0,s.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})," rules files. Roota is a public-domain language for collective cyber defense that combines native queries from SIEM, EDR, XDR, or Data Lake with standardized metadata and threat intelligence to enable automated translation into other languages."]}),"\n",(0,s.jsx)(n.p,{children:"Each rule file follows a specific structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: "Rule Name"\ndescription: "Description of what this rule detects"\nseverity: "high|medium|low"\ncategory: "injection|obfuscation|override|leakage|pii|semantic|dos"\npatterns:\n  language: llm-regex-pattern\n  pattern: \n   - "pattern"\n   - "another_pattern"\naction: "block|notify|allow"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Rule Categories:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Injection"}),": SQL injection, command execution, path traversal, script injection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obfuscation"}),": Character obfuscation, encoding tricks, Unicode homoglyphs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Override"}),": Role play attacks, filter disabling, context splicing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Leakage"}),": Direct prompt requests, forced repetition attacks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PII"}),": Personal identifiable information detection (emails, phones, credit cards, etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Semantic"}),": Emotional manipulation, authority fallacy, multilingual attacks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DoS"}),": Denial of service patterns (character repetition, regex DoS)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"semgrep-rules-for-code-analysis-pipeline",children:"Semgrep Rules for Code Analysis Pipeline"}),"\n",(0,s.jsxs)(n.p,{children:["The code pipeline uses Semgrep rules for static code analysis. Rules are located in ",(0,s.jsx)(n.code,{children:"app/pipelines/semgrep_pipeline/rules/"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Rule Structure:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'rules:\n  - id: rule-id\n    message: "Security issue description"\n    languages: [python, javascript, java]\n    severity: ERROR\n    patterns:\n      - pattern: |\n          $PATTERN\n    fix: |\n      $FIX\n'})}),"\n",(0,s.jsx)(n.h3,{id:"managing-rules",children:"Managing Rules"}),"\n",(0,s.jsx)(n.h4,{id:"using-roota-for-rule-creation",children:"Using Roota for Rule Creation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})," is a public-domain language for collective cyber defense that provides:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"YAML-based format"})," that's easy to write and human-readable"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-language support"})," for SIEM, EDR, XDR, and Data Lake queries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MITRE ATT&CK mapping"})," for threat intelligence integration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Threat actor timeline"})," support for coordinated defense"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Correlation support"})," for more robust detection logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"OCSF and Sigma compatibility"})," for maximum compatibility"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Roota Rule Example:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"name: 'INJ-001: SQL Keywords'\ndetails: Detects common SQL manipulation keywords. Designed to be a high-confidence signal. https://tdm.socprime.com/\nauthor: SOC Prime Team\nseverity: critical\ndate: 2025-08-08\nlogsource:\n  product: llm\n  service: firewall\n  module: regex\ndetection:\n  language: llm-regex-pattern\n  pattern:\n    - '(?i)\\b(?:SELECT\\s+(?:(?!\\bFROM\\b)[^,;]+,)+(?:(?!\\bFROM\\b)[^,;]+)\\s+FROM|INSERT\\s+INTO|UPDATE\\s+[\\w\\.]+\\s+SET|DELETE\\s+FROM|DROP\\s+(?:TABLE|DATABASE)|ALTER\\s+TABLE|CREATE\\s+TABLE|TRUNCATE\\s+TABLE)\\b'\nreferences:\n  - https://genai.owasp.org/llmrisk/llm01-prompt-injection/\n  - https://owasp.org/Top10/A03_2021-Injection/\nlicense: DRL 1.1\nuuid: f1a2b3c4-d5e6-4f7a-8b8c-9d0e1f2a3b4c\nresponse: block\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-uncoder-ai-for-semgrep-rules",children:"Using Uncoder AI for Semgrep Rules"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})," is a powerful tool for converting Sigma and Roota rules to various formats including Semgrep:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Register account for free"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Select Roota/Sigma to Semgrep conversion"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Paste your Roota or Sigma rule"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Generate Semgrep YAML rule"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Save the generated rule"})," in ",(0,s.jsx)(n.code,{children:"app/pipelines/semgrep_pipeline/rules/"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Sigma Rule:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"title: Suspicious PowerShell Command\ndescription: Detects suspicious PowerShell commands\nlogsource:\n  category: process_creation\n  product: windows\ndetection:\n  selection:\n    - CommandLine: '*powershell*'\n    - CommandLine: '*Invoke-Expression*'\n  condition: selection\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-soc-prime-for-advanced-rules",children:"Using SOC Prime for Advanced Rules"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/",children:"SOC Prime"})," provides comprehensive threat detection rules including Roota and Sigma formats:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Visit ",(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/",children:"SOC Prime"})]})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Browse the Rules Library"})," (Sigma, Roota, and other formats)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Filter by technology and threat type"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Download or convert rules using ",(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Adapt rules for your specific use case"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"custom-rule-development",children:"Custom Rule Development"}),"\n",(0,s.jsx)(n.h4,{id:"creating-custom-regex-rules",children:"Creating Custom Regex Rules"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Identify the attack pattern"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Create YAML file"})," in appropriate category folder"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Define patterns"})," with clear descriptions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test thoroughly"})," with various inputs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Set appropriate severity"})," and action"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Custom Rule:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: Custom Injection Pattern\ndetails: Detects custom injection attempts\nauthor: your name\nseverity: high\ndate: 2025-08-08\nlogsource:\n    product: llm\n    category: injection\n    module: regex\npatterns:\n    language: llm-regex-pattern\n    pattern: \n        - "(?i)(union|select|insert|delete|update|drop).*from"\n        - "(?i)(exec|system|eval|shell_exec)"\nreferences:\n    - https://one_example\n    - https://two_example\nlicense: DRL 1.1\nuuid: f1a2b3c4-d5e6-4f7a-8b8c-9d0e1f2a3b4c\naction: block\n'})}),"\n",(0,s.jsx)(n.h4,{id:"creating-custom-semgrep-rules",children:"Creating Custom Semgrep Rules"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Identify code vulnerability pattern"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Write Semgrep pattern"})," using their syntax"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Test with sample code"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Add appropriate metadata"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Place in rules directory"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Custom Semgrep Rule:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'rules:\n  - id: custom-sql-injection\n    message: "Potential SQL injection vulnerability"\n    languages: [python]\n    severity: ERROR\n    patterns:\n      - pattern: |\n          $QUERY = "SELECT * FROM $TABLE WHERE id = " + $USER_INPUT\n    fix: |\n      $QUERY = "SELECT * FROM $TABLE WHERE id = %s"\n      # Use parameterized queries\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-enabling-disabled-pipeline",children:"\u2699\ufe0f Enabling Disabled Pipeline"}),"\n",(0,s.jsx)(n.p,{children:"Some pipelines are disabled by default. To enable them:"}),"\n",(0,s.jsx)(n.h3,{id:"enable-openai-pipeline",children:"Enable OpenAI Pipeline"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Configure your OpenAI API key in the .env configuration file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"OPENAI_API_KEY=your-api-key\nOPENAI_MODEL=gpt-4\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add to your flow in ",(0,s.jsx)(n.code,{children:"config.json"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "flow_name": "base",\n    "pipelines": ["similarity", "regex", "openai"]\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enable-ml-pipeline",children:"Enable ML Pipeline"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Configure the model path in the .env configuration file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ML_MODEL_PATH=/path/to/your/model\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add to your flow in ",(0,s.jsx)(n.code,{children:"config.json"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "flow_name": "base",\n    "pipelines": ["similarity", "regex", "ml"]\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-adding-custom-pipelines",children:"\ud83d\udd27 Adding Custom Pipelines"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-create-pipeline-class",children:"Step 1: Create Pipeline Class"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# app/pipelines/my_pipeline/pipeline.py\nfrom app.pipelines.base import BasePipeline\nfrom app.core.enums import PipelineNames, ActionStatus\nfrom app.models.pipeline import PipelineResult, TriggeredRuleData\n\nclass MyCustomPipeline(BasePipeline):\n    name = PipelineNames.my_pipeline\n    enabled = True\n\n    async def run(self, prompt: str, **kwargs) -> PipelineResult:\n        # Your analyzing logic here\n        triggered_rules = []\n        \n        # Example: Check for specific patterns\n        if "malicious_pattern" in prompt.lower():\n            triggered_rules.append(TriggeredRuleData(\n                id="my_rule_1",\n                name="Malicious Pattern Detected",\n                details="Found potentially malicious content",\n                body=prompt,\n                action=RuleAction.BLOCK\n            ))\n\n        status = ActionStatus.BLOCK if triggered_rules else ActionStatus.ALLOW\n        return PipelineResult(\n            name=self.name,\n            status=status,\n            triggered_rules=triggered_rules\n        )\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-register-pipeline",children:"Step 2: Register Pipeline"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# app/pipelines/__init__.py\nfrom app.pipelines.my_pipeline.pipeline import MyCustomPipeline\n\n__PIPELINES__ = [\n    # ... existing pipelines\n    MyCustomPipeline(),\n]\n\nPIPELINES_MAP = {\n    pipeline.name: pipeline for pipeline in __PIPELINES__\n    if pipeline.enabled\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-3-add-to-configuration",children:"Step 3: Add to Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "flow_name": "base",\n        "pipelines": [\n            "personal_info",\n            "similarity",\n            "regex",\n            "my_pipeline"\n        ]\n    }\n]\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-4-add-pipeline-name-to-enum",children:"Step 4: Add Pipeline Name to Enum"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# app/core/enums.py\nclass PipelineNames(str, Enum):\n    # ... existing names\n    my_pipeline = "my_pipeline"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-development",children:"\ud83e\uddea Development"}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-opensearch",children:"Setting up OpenSearch"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install OpenSearch"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" opensearchproject/opensearch:latest\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create similarity index"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python app/pipelines/similarity_pipeline/index_script.py\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will create the ",(0,s.jsx)(n.code,{children:"similarity-prompt-index"})," index in OpenSearch. You can customize the index name by setting the SIMILARITY_PROMPT_INDEX environment variable."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-kafka-for-event-logging",children:"Setting up Kafka for Event Logging"}),"\n",(0,s.jsx)(n.p,{children:"AIDR Bastion supports Kafka integration for logging BLOCK and NOTIFY events, enabling scalable event streaming and real-time monitoring."}),"\n",(0,s.jsx)(n.h4,{id:"quick-start-with-docker-compose",children:"Quick Start with Docker Compose"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Configure environment variables"}),"\nMinimal required environments"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Add to your .env file\nKAFKA__BOOTSTRAP_SERVERS=localhost:9092\nKAFKA__TOPIC=aidr-events\nKAFKA__SECURITY_PROTOCOL=PLAINTEXT\n"})}),"\n",(0,s.jsx)(n.p,{children:"Full Kafka environment variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"## Kafka configuration\n# KAFKA__BOOTSTRAP_SERVERS=\n# KAFKA__TOPIC=\n# KAFKA__SECURITY_PROTOCOL=PLAINTEXT\n# KAFKA__SASL_MECHANISM=\n# KAFKA__SASL_USERNAME=\n# KAFKA__SASL_PASSWORD=\n# KAFKA__SAVE_PROMPT=true \n"})}),"\n",(0,s.jsxs)(n.p,{children:["The environment variable ",(0,s.jsx)(n.code,{children:"KAFKA__SAVE_PROMPT"})," is optional. It controls whether the input prompt data should be saved to Kafka or not."]}),"\n",(0,s.jsx)(n.h4,{id:"event-logging-features",children:"Event Logging Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"BLOCK Events"}),": Logged when prompts are blocked by detection rules"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NOTIFY Events"}),": Logged when prompts trigger notifications but are allowed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structured JSON"}),": Events include prompt content, detection results, and metadata"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Streaming"}),": Events are sent immediately to Kafka topics"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"event-schema",children:"Event Schema"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n\t"status": "block",\n\t"pipelines": [\n\t\t{\n\t\t\t"status": "block",\n\t\t\t"name": "Pipeline Name",\n\t\t\t"triggered_rules": [\n\t\t\t\t{\n\t\t\t\t\t"details": "",\n\t\t\t\t\t"action": "block",\n\t\t\t\t\t"id": "a12d86d8-d96a-41fa-9e9a-18231539cfde",\n\t\t\t\t\t"name": "Instruction Overriding",\n\t\t\t\t\t"severity": null,\n\t\t\t\t\t"cwe_id": null\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t"service": "AIDR Bastion",\n\t"version": "1.0.0",\n\t"timestamp": "2025-09-24T14:39:50.351466",\n\t"task_id": 1 // unique identifier passed through endpoint run_pipeline\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"advanced-kafka-configuration",children:"Advanced Kafka Configuration"}),"\n",(0,s.jsx)(n.p,{children:"For production environments, configure additional security settings:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# SASL Authentication\nKAFKA__SECURITY_PROTOCOL=SASL_SSL\nKAFKA__SASL_MECHANISM=PLAIN\nKAFKA__SASL_USERNAME=your_username\nKAFKA__SASL_PASSWORD=your_password\n\n# SSL Configuration (if required)\nKAFKA__SSL_CA_LOCATION=/path/to/ca-cert\nKAFKA__SSL_CERTIFICATE_LOCATION=/path/to/client-cert\nKAFKA__SSL_KEY_LOCATION=/path/to/client-key\n"})}),"\n",(0,s.jsx)(n.h4,{id:"rule-management",children:"Rule Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"test_rules.py"}),": Comprehensive rule testing and validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"generate_rules.py"}),": Interactive rule creation and conversion"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})}),": Public-domain language for collective cyber defense"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})}),": Convert Roota/Sigma rules to Semgrep format"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://socprime.com/",children:"SOC Prime"})}),": Access comprehensive threat detection rules"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-license",children:"\ud83d\udcc4 License"}),"\n",(0,s.jsxs)(n.p,{children:["This project is licensed under the GNU Lesser General Public License v3.0 (LGPL-3.0) - see the ",(0,s.jsx)(n.a,{href:"LICENSE",children:"LICENSE"})," file for details."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information about LGPL, visit: ",(0,s.jsx)(n.a,{href:"https://www.gnu.org/licenses/lgpl-3.0.html",children:"https://www.gnu.org/licenses/lgpl-3.0.html"})]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-built-with",children:"\ud83d\udee0\ufe0f Built With"}),"\n",(0,s.jsx)(n.p,{children:"This project is built using the following powerful open-source libraries and frameworks:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/UncoderIO/Roota",children:"Roota"})}),": Public-domain language for collective cyber defense"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://tdm.socprime.com/uncoder-ai/",children:"Uncoder AI"})}),": Convert Roota/Sigma rules to Semgrep format"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://fastapi.tiangolo.com/",children:"FastAPI"})})," - Modern, fast web framework for building APIs with Python 3.7+ based on standard Python type hints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://opensearch.org/",children:"OpenSearch"})})," - Open source search and analytics suite for log analytics, application search, and more"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://openai.com/",children:"OpenAI"})})," - AI research company providing powerful language models for intelligent content analysis"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://semgrep.dev/",children:"Semgrep"})})," - Static analysis tool for finding bugs and security issues in code"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://www.sbert.net/",children:"Sentence Transformers"})})," - Python framework for state-of-the-art sentence, text and image embeddings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://pydantic-docs.helpmanual.io/",children:"Pydantic"})})," - Data validation and settings management using Python type annotations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://www.uvicorn.org/",children:"Uvicorn"})})," - Lightning-fast ASGI server implementation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://pyyaml.org/",children:"PyYAML"})})," - YAML parser and emitter for Python"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://www.nltk.org/",children:"NLTK"})})," - Natural Language Toolkit for text processing"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-to-do-list",children:"\ud83d\udee0\ufe0f TO-DO List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Integrate API with SOC Prime for automatic rule synchronization and uploads"}),"\n",(0,s.jsx)(n.li,{children:"Add local database storage for rules and events"}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Kafka support for scalable event streaming"})," - COMPLETED"]}),"\n",(0,s.jsx)(n.li,{children:"Develop an admin panel for managing events and detection rules"}),"\n",(0,s.jsxs)(n.li,{children:["Explore integration with ",(0,s.jsx)(n.a,{href:"https://github.com/fr0gger/nova-framework/tree/main/nova_rules",children:"NOVA Rules"})," to extend rule sources"]}),"\n",(0,s.jsx)(n.li,{children:"Add YARA-L support"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);